%% EXER_4
%% System Identification Exercise_ first Series


%% Part 3
clc;
clear;
close all
% Generating Noise nad Input Signals
u=binrand([1:350],10,25,1,'normal');% generating input with use of T_binrand
varN=0.1;% noise variance
n =normrnd(0,varN,350,1);% generating noise with normal distribution N~(0,varN)
r =iddata([],u); % creates an iddata object for time-series data for input
v =iddata([],n); % creates an iddata object for time-series data for noise

% BY adding a delay of 10T i, A, B, C 
A = [1  -1.8006  0.8187 0 0 0 0 0 0 0 0 0 0 ];
B = [0 0.01813 ];
C=[1 -1.8187  0.8187];
% make TF model with sampling time= 0.01
Zinput=tf(B,A,0.01)% input TF
Znoise=tf(C,A,0.01)% noise TF
%Simulate LTI model responses to arbitrary inputs, simulates the (time) response of
%continuous or discrete linear systems to arbitrary inputs(noise)
Sys_input=lsim(Zinput,u);% for input
Sys_noise=lsim(Znoise,n);% for noise
Y=Sys_input+Sys_noise;% Y is sum of Sys_input and Sys_noise
Y=iddata(Y,[]);% creates an iddata object for time-series data for final output
% BJ Modeling
data= [Y,r];% preparing input output data for bj function
nk=0;
BJ_model = bj(data,[2 1 2 2 nk])%%%%%%%%%%%% m = bj(data,[nb nc nd nf nk]) WE MUST RUN THIS M_FILE FOR nk=0,5,10,15 !!!!!!!!!!!!!!!!!
Y_hat = sim(BJ_model,[r v]);%Simulate dynamic system with noise(v) and input(r)
%% plotting
%ploting r 
figure
subplot(2,2,1)
plot(r,'b','linewidth',2.5)
legend('INPUT')
grid on
subplot(2,2,2)%ploting real and model output
plot(Y,'b','linewidth',3,Y_hat,'r','linewidth',2.5)
legend('real output','modelBJ output')
grid on
%Specify discrete transfer functions 
discreteTF=filt(BJ_model.B,BJ_model.F)*filt(1,BJ_model.A);
subplot(2,2,3)
pzplot(discreteTF,'b')%Plot pole-zero map
subplot(2,2,4)
pzplot(Zinput,'r')%Plot pole-zero map
legend(' real system','model_bj')
SSE=sum((Y.y-Y_hat.y).^2)% calculating SSE